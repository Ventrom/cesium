define(["./when-54c2dc71","./Cartesian2-15709417","./ArcType-dc1c5aee","./Transforms-c00dcfdd","./Color-e465730a","./ComponentDatatype-a26dd044","./Check-6c0211bc","./GeometryAttribute-c2f3a6a0","./GeometryAttributes-4fcfcf40","./IndexDatatype-eaebd63b","./Math-fbfbe3b1","./PolylinePipeline-53cbf02f","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./EllipsoidGeodesic-e0adc5e7","./EllipsoidRhumbLine-281c49be","./IntersectionTests-9d9af9db","./Plane-ff99a7c3"],function(S,I,R,O,M,U,f,q,N,F,H,W,e,o,r,t,a,i){"use strict";function Y(e,o,r,t,a,i,l){var n,s=W.PolylinePipeline.numberOfPoints(e,o,a),d=r.red,p=r.green,f=r.blue,c=r.alpha,y=t.red,u=t.green,h=t.blue,C=t.alpha;if(M.Color.equals(r,t)){for(n=0;n<s;n++)i[l++]=M.Color.floatToByte(d),i[l++]=M.Color.floatToByte(p),i[l++]=M.Color.floatToByte(f),i[l++]=M.Color.floatToByte(c);return l}var g=(y-d)/s,T=(u-p)/s,v=(h-f)/s,m=(C-c)/s,b=l;for(n=0;n<s;n++)i[b++]=M.Color.floatToByte(d+n*g),i[b++]=M.Color.floatToByte(p+n*T),i[b++]=M.Color.floatToByte(f+n*v),i[b++]=M.Color.floatToByte(c+n*m);return b}function c(e){var o=(e=S.defaultValue(e,S.defaultValue.EMPTY_OBJECT)).positions,r=e.colors,t=S.defaultValue(e.colorsPerVertex,!1);if(!S.defined(o)||o.length<2)throw new f.DeveloperError("At least two positions are required.");if(S.defined(r)&&(t&&r.length<o.length||!t&&r.length<o.length-1))throw new f.DeveloperError("colors has an invalid length.");this._positions=o,this._colors=r,this._colorsPerVertex=t,this._arcType=S.defaultValue(e.arcType,R.ArcType.GEODESIC),this._granularity=S.defaultValue(e.granularity,H.CesiumMath.RADIANS_PER_DEGREE),this._ellipsoid=S.defaultValue(e.ellipsoid,I.Ellipsoid.WGS84),this._workerName="createSimplePolylineGeometry";var a=1+o.length*I.Cartesian3.packedLength;a+=S.defined(r)?1+r.length*M.Color.packedLength:1,this.packedLength=a+I.Ellipsoid.packedLength+3}c.pack=function(e,o,r){if(!S.defined(e))throw new f.DeveloperError("value is required");if(!S.defined(o))throw new f.DeveloperError("array is required");var t;r=S.defaultValue(r,0);var a=e._positions,i=a.length;for(o[r++]=i,t=0;t<i;++t,r+=I.Cartesian3.packedLength)I.Cartesian3.pack(a[t],o,r);var l=e._colors;for(i=S.defined(l)?l.length:0,o[r++]=i,t=0;t<i;++t,r+=M.Color.packedLength)M.Color.pack(l[t],o,r);return I.Ellipsoid.pack(e._ellipsoid,o,r),r+=I.Ellipsoid.packedLength,o[r++]=e._colorsPerVertex?1:0,o[r++]=e._arcType,o[r]=e._granularity,o},c.unpack=function(e,o,r){if(!S.defined(e))throw new f.DeveloperError("array is required");var t;o=S.defaultValue(o,0);var a=e[o++],i=new Array(a);for(t=0;t<a;++t,o+=I.Cartesian3.packedLength)i[t]=I.Cartesian3.unpack(e,o);var l=0<(a=e[o++])?new Array(a):void 0;for(t=0;t<a;++t,o+=M.Color.packedLength)l[t]=M.Color.unpack(e,o);var n=I.Ellipsoid.unpack(e,o);o+=I.Ellipsoid.packedLength;var s=1===e[o++],d=e[o++],p=e[o];return S.defined(r)?(r._positions=i,r._colors=l,r._ellipsoid=n,r._colorsPerVertex=s,r._arcType=d,r._granularity=p,r):new c({positions:i,colors:l,ellipsoid:n,colorsPerVertex:s,arcType:d,granularity:p})};var z=new Array(2),J=new Array(2),j={positions:z,height:J,ellipsoid:void 0,minDistance:void 0,granularity:void 0};return c.createGeometry=function(e){var o,r,t,a,i,l=e._positions,n=e._colors,s=e._colorsPerVertex,d=e._arcType,p=e._granularity,f=e._ellipsoid,c=H.CesiumMath.chordLength(p,f.maximumRadius),y=S.defined(n)&&!s,u=l.length,h=0;if(d===R.ArcType.GEODESIC||d===R.ArcType.RHUMB){var C,g,T;T=d===R.ArcType.GEODESIC?(C=H.CesiumMath.chordLength(p,f.maximumRadius),g=W.PolylinePipeline.numberOfPoints,W.PolylinePipeline.generateArc):(C=p,g=W.PolylinePipeline.numberOfPointsRhumbLine,W.PolylinePipeline.generateRhumbArc);var v=W.PolylinePipeline.extractHeights(l,f),m=j;if(d===R.ArcType.GEODESIC?m.minDistance=c:m.granularity=p,m.ellipsoid=f,y){var b=0;for(o=0;o<u-1;o++)b+=g(l[o],l[o+1],C)+1;r=new Float64Array(3*b),a=new Uint8Array(4*b),m.positions=z,m.height=J;var E=0;for(o=0;o<u-1;++o){z[0]=l[o],z[1]=l[o+1],J[0]=v[o],J[1]=v[o+1];var P=T(m);if(S.defined(n)){var _=P.length/3;i=n[o];for(var A=0;A<_;++A)a[E++]=M.Color.floatToByte(i.red),a[E++]=M.Color.floatToByte(i.green),a[E++]=M.Color.floatToByte(i.blue),a[E++]=M.Color.floatToByte(i.alpha)}r.set(P,h),h+=P.length}}else if(m.positions=l,m.height=v,r=new Float64Array(T(m)),S.defined(n)){for(a=new Uint8Array(r.length/3*4),o=0;o<u-1;++o){h=Y(l[o],l[o+1],n[o],n[o+1],c,a,h)}var B=n[u-1];a[h++]=M.Color.floatToByte(B.red),a[h++]=M.Color.floatToByte(B.green),a[h++]=M.Color.floatToByte(B.blue),a[h++]=M.Color.floatToByte(B.alpha)}}else{t=y?2*u-2:u,r=new Float64Array(3*t),a=S.defined(n)?new Uint8Array(4*t):void 0;var w=0,k=0;for(o=0;o<u;++o){var D=l[o];if(y&&0<o&&(I.Cartesian3.pack(D,r,w),w+=3,i=n[o-1],a[k++]=M.Color.floatToByte(i.red),a[k++]=M.Color.floatToByte(i.green),a[k++]=M.Color.floatToByte(i.blue),a[k++]=M.Color.floatToByte(i.alpha)),y&&o===u-1)break;I.Cartesian3.pack(D,r,w),w+=3,S.defined(n)&&(i=n[o],a[k++]=M.Color.floatToByte(i.red),a[k++]=M.Color.floatToByte(i.green),a[k++]=M.Color.floatToByte(i.blue),a[k++]=M.Color.floatToByte(i.alpha))}}var G=new N.GeometryAttributes;G.position=new q.GeometryAttribute({componentDatatype:U.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r}),S.defined(n)&&(G.color=new q.GeometryAttribute({componentDatatype:U.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:a,normalize:!0}));var L=2*((t=r.length/3)-1),V=F.IndexDatatype.createTypedArray(t,L),x=0;for(o=0;o<t-1;++o)V[x++]=o,V[x++]=o+1;return new q.Geometry({attributes:G,indices:V,primitiveType:q.PrimitiveType.LINES,boundingSphere:O.BoundingSphere.fromPoints(l)})},function(e,o){return S.defined(o)&&(e=c.unpack(e,o)),e._ellipsoid=I.Ellipsoid.clone(e._ellipsoid),c.createGeometry(e)}});
//# sourceMappingURL=createSimplePolylineGeometry.js.map
