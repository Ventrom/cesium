define(["./GeometryOffsetAttribute-b31a3ff4","./arrayRemoveDuplicates-b5ccac6b","./Transforms-c00dcfdd","./Cartesian2-15709417","./Check-6c0211bc","./ComponentDatatype-a26dd044","./PolylineVolumeGeometryLibrary-6c9cb4ba","./CorridorGeometryLibrary-39835a9c","./when-54c2dc71","./GeometryAttribute-c2f3a6a0","./GeometryAttributes-4fcfcf40","./IndexDatatype-eaebd63b","./Math-fbfbe3b1","./PolygonPipeline-5326ae1a","./VertexFormat-4d8b817a","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./EllipsoidTangentPlane-989039a6","./IntersectionTests-9d9af9db","./Plane-ff99a7c3","./PolylinePipeline-53cbf02f","./EllipsoidGeodesic-e0adc5e7","./EllipsoidRhumbLine-281c49be"],function(x,h,g,at,p,it,c,ot,nt,st,lt,dt,ut,N,D,t,e,r,a,i,o,n,s){"use strict";var mt=new at.Cartesian3,ft=new at.Cartesian3,yt=new at.Cartesian3,ct=new at.Cartesian3,M=new at.Cartesian3,pt=new at.Cartesian3,ht=new at.Cartesian3,gt=new at.Cartesian3;function C(t,e){for(var r=0;r<t.length;r++)t[r]=e.scaleToGeodeticSurface(t[r],t[r]);return t}function Ct(t,e,r,a,i,o){var n=t.normals,s=t.tangents,l=t.bitangents,d=at.Cartesian3.normalize(at.Cartesian3.cross(r,e,ht),ht);o.normal&&ot.CorridorGeometryLibrary.addAttribute(n,e,a,i),o.tangent&&ot.CorridorGeometryLibrary.addAttribute(s,d,a,i),o.bitangent&&ot.CorridorGeometryLibrary.addAttribute(l,r,a,i)}function O(t,e,r){var a,i,o,n=t.positions,s=t.corners,l=t.endPositions,d=t.lefts,u=t.normals,m=new lt.GeometryAttributes,f=0,y=0,c=0;for(i=0;i<n.length;i+=2)f+=o=n[i].length-3,c+=2*o,y+=n[i+1].length-3;for(f+=3,y+=3,i=0;i<s.length;i++){a=s[i];var p=s[i].leftPositions;nt.defined(p)?f+=o=p.length:y+=o=s[i].rightPositions.length,c+=o}var h,g=nt.defined(l);g&&(f+=h=l[0].length-3,y+=h,c+=6*(h/=3));var C,b,v,A,_,w,T=f+y,G=new Float64Array(T),E={normals:e.normal?new Float32Array(T):void 0,tangents:e.tangent?new Float32Array(T):void 0,bitangents:e.bitangent?new Float32Array(T):void 0},V=0,F=T-1,L=mt,P=ft,x=h/2,N=dt.IndexDatatype.createTypedArray(T/3,c),D=0;if(g){w=yt,_=ct;var M=l[0];for(L=at.Cartesian3.fromArray(u,0,L),P=at.Cartesian3.fromArray(d,0,P),i=0;i<x;i++)w=at.Cartesian3.fromArray(M,3*(x-1-i),w),_=at.Cartesian3.fromArray(M,3*(x+i),_),ot.CorridorGeometryLibrary.addAttribute(G,_,V),ot.CorridorGeometryLibrary.addAttribute(G,w,void 0,F),Ct(E,L,P,V,F,e),A=(b=V/3)+1,v=(C=(F-2)/3)-1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3}var O,I,k=0,S=0,R=n[k++],H=n[k++];for(G.set(R,V),G.set(H,F-H.length+1),P=at.Cartesian3.fromArray(d,S,P),o=H.length-3,i=0;i<o;i+=3)O=r.geodeticSurfaceNormal(at.Cartesian3.fromArray(R,i,ht),ht),I=r.geodeticSurfaceNormal(at.Cartesian3.fromArray(H,o-i,gt),gt),Ct(E,L=at.Cartesian3.normalize(at.Cartesian3.add(O,I,L),L),P,V,F,e),A=(b=V/3)+1,v=(C=(F-2)/3)-1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3;for(O=r.geodeticSurfaceNormal(at.Cartesian3.fromArray(R,o,ht),ht),I=r.geodeticSurfaceNormal(at.Cartesian3.fromArray(H,o,gt),gt),L=at.Cartesian3.normalize(at.Cartesian3.add(O,I,L),L),S+=3,i=0;i<s.length;i++){var z,U,B,Y=(a=s[i]).leftPositions,W=a.rightPositions,q=pt,J=yt,j=ct;if(L=at.Cartesian3.fromArray(u,S,L),nt.defined(Y)){for(Ct(E,L,P,void 0,F,e),F-=3,U=A,B=v,z=0;z<Y.length/3;z++)q=at.Cartesian3.fromArray(Y,3*z,q),N[D++]=U,N[D++]=B-z-1,N[D++]=B-z,ot.CorridorGeometryLibrary.addAttribute(G,q,void 0,F),J=at.Cartesian3.fromArray(G,3*(B-z-1),J),j=at.Cartesian3.fromArray(G,3*U,j),Ct(E,L,P=at.Cartesian3.normalize(at.Cartesian3.subtract(J,j,P),P),void 0,F,e),F-=3;q=at.Cartesian3.fromArray(G,3*U,q),J=at.Cartesian3.subtract(at.Cartesian3.fromArray(G,3*B,J),q,J),j=at.Cartesian3.subtract(at.Cartesian3.fromArray(G,3*(B-z),j),q,j),Ct(E,L,P=at.Cartesian3.normalize(at.Cartesian3.add(J,j,P),P),V,void 0,e),V+=3}else{for(Ct(E,L,P,V,void 0,e),V+=3,U=v,B=A,z=0;z<W.length/3;z++)q=at.Cartesian3.fromArray(W,3*z,q),N[D++]=U,N[D++]=B+z,N[D++]=B+z+1,ot.CorridorGeometryLibrary.addAttribute(G,q,V),J=at.Cartesian3.fromArray(G,3*U,J),j=at.Cartesian3.fromArray(G,3*(B+z),j),Ct(E,L,P=at.Cartesian3.normalize(at.Cartesian3.subtract(J,j,P),P),V,void 0,e),V+=3;q=at.Cartesian3.fromArray(G,3*U,q),J=at.Cartesian3.subtract(at.Cartesian3.fromArray(G,3*(B+z),J),q,J),j=at.Cartesian3.subtract(at.Cartesian3.fromArray(G,3*B,j),q,j),Ct(E,L,P=at.Cartesian3.normalize(at.Cartesian3.negate(at.Cartesian3.add(j,J,P),P),P),void 0,F,e),F-=3}for(R=n[k++],H=n[k++],R.splice(0,3),H.splice(H.length-3,3),G.set(R,V),G.set(H,F-H.length+1),o=H.length-3,S+=3,P=at.Cartesian3.fromArray(d,S,P),z=0;z<H.length;z+=3)O=r.geodeticSurfaceNormal(at.Cartesian3.fromArray(R,z,ht),ht),I=r.geodeticSurfaceNormal(at.Cartesian3.fromArray(H,o-z,gt),gt),Ct(E,L=at.Cartesian3.normalize(at.Cartesian3.add(O,I,L),L),P,V,F,e),b=(A=V/3)-1,C=(v=(F-2)/3)+1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3;V-=3,F+=3}if(Ct(E,L=at.Cartesian3.fromArray(u,u.length-3,L),P,V,F,e),g){V+=3,F-=3,w=yt,_=ct;var K=l[1];for(i=0;i<x;i++)w=at.Cartesian3.fromArray(K,3*(h-i-1),w),_=at.Cartesian3.fromArray(K,3*i,_),ot.CorridorGeometryLibrary.addAttribute(G,w,void 0,F),ot.CorridorGeometryLibrary.addAttribute(G,_,V),Ct(E,L,P,V,F,e),b=(A=V/3)-1,C=(v=(F-2)/3)+1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3}if(m.position=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:G}),e.st){var Q,X,Z=new Float32Array(T/3*2),$=0;if(g){f/=3,y/=3;var tt,et=Math.PI/(h+1);X=1/(f-h+1),Q=1/(y-h+1);var rt=h/2;for(i=rt+1;i<h+1;i++)tt=ut.CesiumMath.PI_OVER_TWO+et*i,Z[$++]=Q*(1+Math.cos(tt)),Z[$++]=.5*(1+Math.sin(tt));for(i=1;i<y-h+1;i++)Z[$++]=i*Q,Z[$++]=0;for(i=h;rt<i;i--)tt=ut.CesiumMath.PI_OVER_TWO-i*et,Z[$++]=1-Q*(1+Math.cos(tt)),Z[$++]=.5*(1+Math.sin(tt));for(i=rt;0<i;i--)tt=ut.CesiumMath.PI_OVER_TWO-et*i,Z[$++]=1-X*(1+Math.cos(tt)),Z[$++]=.5*(1+Math.sin(tt));for(i=f-h;0<i;i--)Z[$++]=i*X,Z[$++]=1;for(i=1;i<rt+1;i++)tt=ut.CesiumMath.PI_OVER_TWO+et*i,Z[$++]=X*(1+Math.cos(tt)),Z[$++]=.5*(1+Math.sin(tt))}else{for(X=1/((f/=3)-1),Q=1/((y/=3)-1),i=0;i<y;i++)Z[$++]=i*Q,Z[$++]=0;for(i=f;0<i;i--)Z[$++]=(i-1)*X,Z[$++]=1}m.st=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:Z})}return e.normal&&(m.normal=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E.normals})),e.tangent&&(m.tangent=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E.tangents})),e.bitangent&&(m.bitangent=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E.bitangents})),{attributes:m,indices:N}}function I(t,e,r){r[e++]=t[0],r[e++]=t[1],r[e++]=t[2];for(var a=3;a<t.length;a+=3){var i=t[a],o=t[a+1],n=t[a+2];r[e++]=i,r[e++]=o,r[e++]=n,r[e++]=i,r[e++]=o,r[e++]=n}return r[e++]=t[0],r[e++]=t[1],r[e++]=t[2],r}function b(t,e){var r=new D.VertexFormat({position:e.position,normal:e.normal||e.bitangent||t.shadowVolume,tangent:e.tangent,bitangent:e.normal||e.bitangent,st:e.st}),a=t.ellipsoid,i=O(ot.CorridorGeometryLibrary.computePositions(t),r,a),o=t.height,n=t.extrudedHeight,s=i.attributes,l=i.indices,d=s.position.values,u=d.length,m=new Float64Array(6*u),f=new Float64Array(u);f.set(d);var y,c=new Float64Array(4*u);c=I(d=N.PolygonPipeline.scaleToGeodeticHeight(d,o,a),0,c),c=I(f=N.PolygonPipeline.scaleToGeodeticHeight(f,n,a),2*u,c),m.set(d),m.set(f,u),m.set(c,2*u),s.position.values=m,s=function(t,e){if(!(e.normal||e.tangent||e.bitangent||e.st))return t;var r,a,i=t.position.values;(e.normal||e.bitangent)&&(r=t.normal.values,a=t.bitangent.values);var o,n=t.position.values.length/18,s=3*n,l=2*n,d=2*s;if(e.normal||e.bitangent||e.tangent){var u=e.normal?new Float32Array(6*s):void 0,m=e.tangent?new Float32Array(6*s):void 0,f=e.bitangent?new Float32Array(6*s):void 0,y=mt,c=ft,p=yt,h=ct,g=M,C=pt,b=d;for(o=0;o<s;o+=3){var v=b+d;y=at.Cartesian3.fromArray(i,o,y),c=at.Cartesian3.fromArray(i,o+s,c),p=at.Cartesian3.fromArray(i,(o+3)%s,p),c=at.Cartesian3.subtract(c,y,c),p=at.Cartesian3.subtract(p,y,p),h=at.Cartesian3.normalize(at.Cartesian3.cross(c,p,h),h),e.normal&&(ot.CorridorGeometryLibrary.addAttribute(u,h,v),ot.CorridorGeometryLibrary.addAttribute(u,h,v+3),ot.CorridorGeometryLibrary.addAttribute(u,h,b),ot.CorridorGeometryLibrary.addAttribute(u,h,b+3)),(e.tangent||e.bitangent)&&(C=at.Cartesian3.fromArray(r,o,C),e.bitangent&&(ot.CorridorGeometryLibrary.addAttribute(f,C,v),ot.CorridorGeometryLibrary.addAttribute(f,C,v+3),ot.CorridorGeometryLibrary.addAttribute(f,C,b),ot.CorridorGeometryLibrary.addAttribute(f,C,b+3)),e.tangent&&(g=at.Cartesian3.normalize(at.Cartesian3.cross(C,h,g),g),ot.CorridorGeometryLibrary.addAttribute(m,g,v),ot.CorridorGeometryLibrary.addAttribute(m,g,v+3),ot.CorridorGeometryLibrary.addAttribute(m,g,b),ot.CorridorGeometryLibrary.addAttribute(m,g,b+3))),b+=6}if(e.normal){for(u.set(r),o=0;o<s;o+=3)u[o+s]=-r[o],u[o+s+1]=-r[o+1],u[o+s+2]=-r[o+2];t.normal.values=u}else t.normal=void 0;if(e.bitangent?(f.set(a),f.set(a,s),t.bitangent.values=f):t.bitangent=void 0,e.tangent){var A=t.tangent.values;m.set(A),m.set(A,s),t.tangent.values=m}}if(e.st){var _=t.st.values,w=new Float32Array(6*l);w.set(_),w.set(_,l);for(var T=2*l,G=0;G<2;G++){for(w[T++]=_[0],w[T++]=_[1],o=2;o<l;o+=2){var E=_[o],V=_[o+1];w[T++]=E,w[T++]=V,w[T++]=E,w[T++]=V}w[T++]=_[0],w[T++]=_[1]}t.st.values=w}return t}(s,e);var p=u/3;if(t.shadowVolume){var h=s.normal.values;u=h.length;var g=new Float32Array(6*u);for(y=0;y<u;y++)h[y]=-h[y];g.set(h,u),g=I(h,4*u,g),s.extrudeDirection=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:g}),e.normal||(s.normal=void 0)}if(nt.defined(t.offsetAttribute)){var C=new Uint8Array(6*p);if(t.offsetAttribute===x.GeometryOffsetAttribute.TOP)C=x.arrayFill(C,1,0,p),C=x.arrayFill(C,1,2*p,4*p);else{var b=t.offsetAttribute===x.GeometryOffsetAttribute.NONE?0:1;C=x.arrayFill(C,b)}s.applyOffset=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:C})}var v=l.length,A=p+p,_=dt.IndexDatatype.createTypedArray(m.length/3,2*v+3*A);_.set(l);var w,T,G,E,V=v;for(y=0;y<v;y+=3){var F=l[y],L=l[y+1],P=l[y+2];_[V++]=P+p,_[V++]=L+p,_[V++]=F+p}for(y=0;y<A;y+=2)G=(w=y+A)+1,E=(T=w+A)+1,_[V++]=w,_[V++]=T,_[V++]=G,_[V++]=G,_[V++]=T,_[V++]=E;return{attributes:s,indices:_}}var v=new at.Cartesian3,A=new at.Cartesian3,_=new at.Cartographic;function w(t,e,r,a,i,o){var n=at.Cartesian3.subtract(e,t,v);at.Cartesian3.normalize(n,n);var s=r.geodeticSurfaceNormal(t,A),l=at.Cartesian3.cross(n,s,v);at.Cartesian3.multiplyByScalar(l,a,l);var d=i.latitude,u=i.longitude,m=o.latitude,f=o.longitude;at.Cartesian3.add(t,l,A),r.cartesianToCartographic(A,_);var y=_.latitude,c=_.longitude;d=Math.min(d,y),u=Math.min(u,c),m=Math.max(m,y),f=Math.max(f,c),at.Cartesian3.subtract(t,l,A),r.cartesianToCartographic(A,_),y=_.latitude,c=_.longitude,d=Math.min(d,y),u=Math.min(u,c),m=Math.max(m,y),f=Math.max(f,c),i.latitude=d,i.longitude=u,o.latitude=m,o.longitude=f}var T=new at.Cartesian3,G=new at.Cartesian3,E=new at.Cartographic,V=new at.Cartographic;function l(t,e,r,a,i){t=C(t,e);var o=h.arrayRemoveDuplicates(t,at.Cartesian3.equalsEpsilon),n=o.length;if(n<2||r<=0)return new at.Rectangle;var s,l,d=.5*r;if(E.latitude=Number.POSITIVE_INFINITY,E.longitude=Number.POSITIVE_INFINITY,V.latitude=Number.NEGATIVE_INFINITY,V.longitude=Number.NEGATIVE_INFINITY,a===c.CornerType.ROUNDED){var u=o[0];at.Cartesian3.subtract(u,o[1],T),at.Cartesian3.normalize(T,T),at.Cartesian3.multiplyByScalar(T,d,T),at.Cartesian3.add(u,T,G),e.cartesianToCartographic(G,_),s=_.latitude,l=_.longitude,E.latitude=Math.min(E.latitude,s),E.longitude=Math.min(E.longitude,l),V.latitude=Math.max(V.latitude,s),V.longitude=Math.max(V.longitude,l)}for(var m=0;m<n-1;++m)w(o[m],o[m+1],e,d,E,V);var f=o[n-1];at.Cartesian3.subtract(f,o[n-2],T),at.Cartesian3.normalize(T,T),at.Cartesian3.multiplyByScalar(T,d,T),at.Cartesian3.add(f,T,G),w(f,G,e,d,E,V),a===c.CornerType.ROUNDED&&(e.cartesianToCartographic(G,_),s=_.latitude,l=_.longitude,E.latitude=Math.min(E.latitude,s),E.longitude=Math.min(E.longitude,l),V.latitude=Math.max(V.latitude,s),V.longitude=Math.max(V.longitude,l));var y=nt.defined(i)?i:new at.Rectangle;return y.north=V.latitude,y.south=E.latitude,y.east=V.longitude,y.west=E.longitude,y}function F(t){var e=(t=nt.defaultValue(t,nt.defaultValue.EMPTY_OBJECT)).positions,r=t.width;p.Check.defined("options.positions",e),p.Check.defined("options.width",r);var a=nt.defaultValue(t.height,0),i=nt.defaultValue(t.extrudedHeight,a);this._positions=e,this._ellipsoid=at.Ellipsoid.clone(nt.defaultValue(t.ellipsoid,at.Ellipsoid.WGS84)),this._vertexFormat=D.VertexFormat.clone(nt.defaultValue(t.vertexFormat,D.VertexFormat.DEFAULT)),this._width=r,this._height=Math.max(a,i),this._extrudedHeight=Math.min(a,i),this._cornerType=nt.defaultValue(t.cornerType,c.CornerType.ROUNDED),this._granularity=nt.defaultValue(t.granularity,ut.CesiumMath.RADIANS_PER_DEGREE),this._shadowVolume=nt.defaultValue(t.shadowVolume,!1),this._workerName="createCorridorGeometry",this._offsetAttribute=t.offsetAttribute,this._rectangle=void 0,this.packedLength=1+e.length*at.Cartesian3.packedLength+at.Ellipsoid.packedLength+D.VertexFormat.packedLength+7}F.pack=function(t,e,r){p.Check.defined("value",t),p.Check.defined("array",e),r=nt.defaultValue(r,0);var a=t._positions,i=a.length;e[r++]=i;for(var o=0;o<i;++o,r+=at.Cartesian3.packedLength)at.Cartesian3.pack(a[o],e,r);return at.Ellipsoid.pack(t._ellipsoid,e,r),r+=at.Ellipsoid.packedLength,D.VertexFormat.pack(t._vertexFormat,e,r),r+=D.VertexFormat.packedLength,e[r++]=t._width,e[r++]=t._height,e[r++]=t._extrudedHeight,e[r++]=t._cornerType,e[r++]=t._granularity,e[r++]=t._shadowVolume?1:0,e[r]=nt.defaultValue(t._offsetAttribute,-1),e};var L=at.Ellipsoid.clone(at.Ellipsoid.UNIT_SPHERE),P=new D.VertexFormat,k={positions:void 0,ellipsoid:L,vertexFormat:P,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,shadowVolume:void 0,offsetAttribute:void 0};return F.unpack=function(t,e,r){p.Check.defined("array",t),e=nt.defaultValue(e,0);for(var a=t[e++],i=new Array(a),o=0;o<a;++o,e+=at.Cartesian3.packedLength)i[o]=at.Cartesian3.unpack(t,e);var n=at.Ellipsoid.unpack(t,e,L);e+=at.Ellipsoid.packedLength;var s=D.VertexFormat.unpack(t,e,P);e+=D.VertexFormat.packedLength;var l=t[e++],d=t[e++],u=t[e++],m=t[e++],f=t[e++],y=1===t[e++],c=t[e];return nt.defined(r)?(r._positions=i,r._ellipsoid=at.Ellipsoid.clone(n,r._ellipsoid),r._vertexFormat=D.VertexFormat.clone(s,r._vertexFormat),r._width=l,r._height=d,r._extrudedHeight=u,r._cornerType=m,r._granularity=f,r._shadowVolume=y,r._offsetAttribute=-1===c?void 0:c,r):(k.positions=i,k.width=l,k.height=d,k.extrudedHeight=u,k.cornerType=m,k.granularity=f,k.shadowVolume=y,k.offsetAttribute=-1===c?void 0:c,new F(k))},F.computeRectangle=function(t,e){var r=(t=nt.defaultValue(t,nt.defaultValue.EMPTY_OBJECT)).positions,a=t.width;return p.Check.defined("options.positions",r),p.Check.defined("options.width",a),l(r,nt.defaultValue(t.ellipsoid,at.Ellipsoid.WGS84),a,nt.defaultValue(t.cornerType,c.CornerType.ROUNDED),e)},F.createGeometry=function(t){var e=t._positions,r=t._width,a=t._ellipsoid;e=C(e,a);var i=h.arrayRemoveDuplicates(e,at.Cartesian3.equalsEpsilon);if(!(i.length<2||r<=0)){var o,n=t._height,s=t._extrudedHeight,l=!ut.CesiumMath.equalsEpsilon(n,s,0,ut.CesiumMath.EPSILON2),d=t._vertexFormat,u={ellipsoid:a,positions:i,width:r,cornerType:t._cornerType,granularity:t._granularity,saveAttributes:!0};if(l)u.height=n,u.extrudedHeight=s,u.shadowVolume=t._shadowVolume,u.offsetAttribute=t._offsetAttribute,o=b(u,d);else if((o=O(ot.CorridorGeometryLibrary.computePositions(u),d,a)).attributes.position.values=N.PolygonPipeline.scaleToGeodeticHeight(o.attributes.position.values,n,a),nt.defined(t._offsetAttribute)){var m=t._offsetAttribute===x.GeometryOffsetAttribute.NONE?0:1,f=o.attributes.position.values.length,y=new Uint8Array(f/3);x.arrayFill(y,m),o.attributes.applyOffset=new st.GeometryAttribute({componentDatatype:it.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:y})}var c=o.attributes,p=g.BoundingSphere.fromVertices(c.position.values,void 0,3);return d.position||(o.attributes.position.values=void 0),new st.Geometry({attributes:c,indices:o.indices,primitiveType:st.PrimitiveType.TRIANGLES,boundingSphere:p,offsetAttribute:t._offsetAttribute})}},F.createShadowVolume=function(t,e,r){var a=t._granularity,i=t._ellipsoid,o=e(a,i),n=r(a,i);return new F({positions:t._positions,width:t._width,cornerType:t._cornerType,ellipsoid:i,granularity:a,extrudedHeight:o,height:n,vertexFormat:D.VertexFormat.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(F.prototype,{rectangle:{get:function(){return nt.defined(this._rectangle)||(this._rectangle=l(this._positions,this._ellipsoid,this._width,this._cornerType)),this._rectangle}},textureCoordinateRotationPoints:{get:function(){return[0,0,0,1,1,0]}}}),function(t,e){return nt.defined(e)&&(t=F.unpack(t,e)),t._ellipsoid=at.Ellipsoid.clone(t._ellipsoid),F.createGeometry(t)}});
//# sourceMappingURL=createCorridorGeometry.js.map
